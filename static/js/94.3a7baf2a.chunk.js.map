{"version":3,"file":"static/js/94.3a7baf2a.chunk.js","mappings":"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","sources":["components/redux/selectors.js","webpack://react-homework-template/./src/shared/component/Button/button.module.css?5ed7","shared/component/Button/Button.jsx","components/MyPhone/MyPhoneForm/initialState.js","webpack://react-homework-template/./src/components/MyPhone/MyPhoneForm/myPhoneForm.module.css?fe1d","components/MyPhone/MyPhoneForm/MyPhoneForm.jsx","webpack://react-homework-template/./src/components/MyPhone/ContactsList/contactsList.module.css?3efd","components/MyPhone/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/MyPhone/MyPhoneFilter/myPhoneFilter.module.css?0fb8","components/MyPhone/MyPhoneFilter/MyPhoneFilter.jsx","webpack://react-homework-template/./src/shared/component/Message/message.module.css?120f","shared/component/Message/Message.jsx","webpack://react-homework-template/./src/components/MyPhone/myPhone.module.css?00b6","components/MyPhone/MyPhone.jsx","components/redux/actions.js","page/AllPhonePage/AllPhonePage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getAllPhones = store => store.phones;\n\nexport const getHomePhones = store => {\n    const homePhones = store.phones.filter(({ home }) => home);\n    return homePhones;\n};\n\nexport const getWorkPhones = store => {\n    const workPhones = store.phones.filter(({ work }) => work);\n    return workPhones;\n};\n\nexport const getFilteredPhones = ({ phones, filter }) => {\nif (!filter) {\n        return phones;\n    }\n    const normFilter = filter.toLowerCase();\n    const result = phones.filter(({ name, number }) => {\n        return (name.toLowerCase().includes(normFilter) || number.toLowerCase().includes(normFilter))\n    })\n    return result;    \n}\n\nexport const getFilter = ({ filter }) => filter;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__r1lcq\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./button.module.css\";\n\nconst Button = ({children, onClick, type}) => {\n    return <button onClick={onClick} className={css.btn} type={type}>{children}</button>\n}\n\nexport default Button;\n\nButton.defaultProps = {\n    type: \"button\",\n}\n\nButton.prototypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf(['submit', 'button', 'reset']),\n    children: PropTypes.element.isRequired,\n}","const inititalState = {\n    name: \"\",\n    number: \"\",\n    home: false,\n    work: false,\n}\n\nexport default inititalState;","// extracted by mini-css-extract-plugin\nexport default {\"labelText\":\"myPhoneForm_labelText__Hcazb\",\"formInput\":\"myPhoneForm_formInput__FxZfl\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import useForm from \"shared/hooks/useForm\";\nimport Button from \"./../../../shared/component/Button/Button\";\nimport initialState from \"./initialState\";\n\nimport css from \"./myPhoneForm.module.css\";\n\n\nconst MyPhoneForm = ({ onSubmit }) => {\n    // const [state, handleChange, handleSubmit] = useForm({initialState, onSubmit });\n    const [state, setState] = useState({ ...initialState });\n\nconst handleChange = ({target}) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState(prevState => {\n        return { ...prevState, [name]: newValue };\n    })\n}\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const resultSubmit = onSubmit(({...state}));\n        if(resultSubmit) {\n            setState({ ...initialState });\n        }\n}\n\nconst { name, number, home, work } = state;\n    \nreturn (\n         <form action=\"\" onSubmit={handleSubmit}>\n            <div className={css.formInput}>\n                <label className={css.labelText}>Name:</label>\n                <input\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </div>\n            <div className={css.formInput}>\n                <label className={css.labelText}>Number:</label>\n                <input\n                    onChange={handleChange}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n        </div>\n        <div className={css.formInput}>\n                <label className={css.labelText}>Home:</label>\n                <input\n                    onChange={handleChange}\n                    type=\"checkbox\"\n                    name=\"home\"\n                    checked={home}\n                    title=\"HomePhone\"\n                    \n            />\n            <label className={css.labelText}>Work:</label>\n                <input\n                    onChange={handleChange}\n                    type=\"checkbox\"\n                    name=\"work\"\n                    checked={work}\n                    title=\"WorkPhone\"\n                    \n                />\n            </div>\n            <Button type=\"submit\">Add contact</Button>\n        </form>\n        )\n}\n\nexport default MyPhoneForm;\n\nMyPhoneForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"textItem\":\"contactsList_textItem__qlHuq\"};","import PropTypes from \"prop-types\";\n\nimport Button from \"./../../../shared/component/Button/Button\";\n\nimport css from \"./contactsList.module.css\"\n\nconst ContactsList = ({contacts, removeContact}) => {\n    const phone = contacts.map(({ id, name, number }) =>\n        <li key={id} className={css.textItem}>\n            {name}       {number}\n            <Button onClick={() => removeContact(id)} type=\"button\">delete</Button>\n        </li>);\n    return (\n        <ul>\n            {phone}\n        </ul>        \n    )\n}\n\nexport default ContactsList;\n\nContactsList.defaultPrors = {\n    contacts: []\n}\n\nContactsList.propTypes = {\n    removeContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name:  PropTypes.string.isRequired,\n        number:  PropTypes.string.isRequired,\n    }))\n}","// extracted by mini-css-extract-plugin\nexport default {\"labelText\":\"myPhoneFilter_labelText__+v0CO\",\"formInput\":\"myPhoneFilter_formInput__8OkR1\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./myPhoneFilter.module.css\"\n\nconst MyPhoneFilter = ({ handleChange, filter }) => {\n    return (\n        <div className={css.formInput}>\n            <label className={css.labelText}>Find contacts by name</label>\n            <input\n                onChange={handleChange}\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n            />\n        </div>\n    )\n}\n\nexport default MyPhoneFilter;\n\nMyPhoneFilter.propTypes = {\n    handleChange: PropTypes.func.isRequired,\n    filter: PropTypes.string,\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"message_title__MgS1b\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./message.module.css\";\n\nconst Message = ({ message }) => {\n    return(\n  <h3 className={css.title}>{message}</h3>\n    )\n}\n\nexport default Message;\n\nMessage.propTypes = {\n    message: PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"myPhone_title__0V57h\",\"titlePage\":\"myPhone_titlePage__2NwgJ\",\"wrapper\":\"myPhone_wrapper__OfZJq\",\"block\":\"myPhone_block__tSoc6\"};","import { useEffect } from \"react\";\n// import { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport MyPhoneForm from \"./MyPhoneForm/MyPhoneForm\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport MyPhoneFilter from \"./MyPhoneFilter/MyPhoneFilter\";\n\nimport Message from \"./../../shared/component/Message/Message\";\nimport { addContact, deleteContact, setFilter } from \"./../redux/actions\";\nimport { getAllPhones, getFilter } from \"components/redux/selectors\";\n\nimport css from \"./myPhone.module.css\";\n\nconst MyPhone = () => {\n    // const [phones, setPhones] = useState(() => {\n    //     const phones = JSON.parse(localStorage.getItem(\"my-phonebook\"));\n    //     return phones ? phones : [];\n    // });\n    const phones = useSelector(getAllPhones);\n    // const [filter, setFilter] = useState(\"\");\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        localStorage.setItem(\"my-phonebook\", JSON.stringify(phones));\n    }, [phones]);   \n\nconst isDublicate = (name, number)=> {\n    const normName = name.toLowerCase();\n    const normNumber = number.toLowerCase();\n    const person = contacts.find(({ name, number }) => {\n        return (name.toLowerCase() === normName || number.toLowerCase() === normNumber)\n    })\n    return Boolean(person)\n    }  \n\nconst onAddContact = ({name, number, home, work}) => {\n        if (isDublicate(name, number)) {\n            alert(`${name} is already ixist`);\n            return false;\n        }\n        \n    const action = addContact({ name, number, home, work });\n    dispatch(action);\n    }\n\n    const removeContact = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n    };\n\n    const handleFilter = ({ target }) => {\n        dispatch(setFilter(target.value));\n    }\n\nconst filterContacts=() => {\n    if (!filter) {\n        return phones;\n    }\n    const normFilter = filter.toLowerCase();\n    const result = phones.filter(({ name, number }) => {\n        return (name.toLowerCase().includes(normFilter) || number.toLowerCase().includes(normFilter))\n    })\n    return result;\n    }     \n\n   \n    \n    const contacts = filterContacts();\n    console.log(contacts);\n    const isPerson = Boolean(contacts.length);\n        return (\n            <div>\n                <h2 className={css.titlePage}>Contacts of worcers of caffe Expresso</h2>\n                <div className={css.wrapper}>\n                    <div className={css.block}>\n                        <h3 className={css.title}>PhoneBook</h3>\n                        <MyPhoneForm onSubmit={onAddContact}/>\n                    </div>\n                    <div className={css.block}>\n                        <h3 className={css.title}>Contacts</h3>\n                        <MyPhoneFilter handleChange={handleFilter} /> \n                        {isPerson && <ContactsList removeContact={removeContact} contacts={contacts}/>}\n                        {!isPerson && <Message message=\"No person in contacts list\" />}\n                            \n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nexport default MyPhone; ","import { nanoid } from \"nanoid\";\nimport { ADD_PHONE, DELETE_PHONE, SET_FILTER } from \"./types\";\n\nexport const addContact = payload => {\n    return {\n        type: ADD_PHONE,\n        payload: {\n            id: nanoid(),\n            ...payload,\n        },\n    }\n}\n\nexport const deleteContact = payload => {\n    return {\n        type: DELETE_PHONE,\n        payload,\n    }\n}\n\nexport const setFilter = payload => {\n    return {\n        type: SET_FILTER,\n        payload,\n    }\n}","import MyPhone from \"components/MyPhone/MyPhone\";\n\nconst AllPhonePage = () => {\n    return (\n        <>\n            <MyPhone/>\n        </>\n    )\n}\n\nexport default AllPhonePage;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getAllPhones","store","phones","getHomePhones","filter","home","getWorkPhones","work","getFilter","Button","children","onClick","type","className","css","defaultProps","prototypes","PropTypes","name","number","onSubmit","useState","initialState","state","setState","handleChange","target","value","checked","newValue","prevState","action","e","preventDefault","onChange","pattern","title","required","ContactsList","contacts","removeContact","phone","map","id","defaultPrors","message","useSelector","dispatch","useDispatch","useEffect","localStorage","setItem","JSON","stringify","normFilter","toLowerCase","includes","filterContacts","console","log","isPerson","Boolean","length","normName","normNumber","person","find","isDublicate","alert","payload","ADD_PHONE","nanoid","SET_FILTER","DELETE_PHONE","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}